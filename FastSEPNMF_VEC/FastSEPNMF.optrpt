Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.1.163 Build 20171018

Compiler options: -O3 -restrict -qopt-report-phase=vec,loop,openmp -qopt-report=3 -o FastSEPNMF.o -c -w

Begin optimization report for: main(int, char **)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at FastSEPNMF.c(221,2) inlined into FastSEPNMF.c(61,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at FastSEPNMF.c(224,3) inlined into FastSEPNMF.c(61,3)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(224,3) inlined into FastSEPNMF.c(61,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 5 
      remark #15477: vector cost: 1.250 
      remark #15478: estimated potential speedup: 3.480 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(224,3) inlined into FastSEPNMF.c(61,3)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(228,3) inlined into FastSEPNMF.c(61,3)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(228,3) inlined into FastSEPNMF.c(61,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 4.320 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(228,3) inlined into FastSEPNMF.c(61,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at FastSEPNMF.c(64,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at FastSEPNMF.c(65,3)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(65,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 2.000 
      remark #15478: estimated potential speedup: 5.100 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(65,3)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at FastSEPNMF.c(207,2) inlined into FastSEPNMF.c(76,12)
<Peeled loop for vectorization>
   remark #25015: Estimate of max trip count of loop=3
LOOP END

LOOP BEGIN at FastSEPNMF.c(207,2) inlined into FastSEPNMF.c(76,12)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 4.250 
   remark #15478: estimated potential speedup: 1.800 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FastSEPNMF.c(207,2) inlined into FastSEPNMF.c(76,12)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at FastSEPNMF.c(81,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at FastSEPNMF.c(207,2) inlined into FastSEPNMF.c(84,7)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(207,2) inlined into FastSEPNMF.c(84,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 4.250 
      remark #15478: estimated potential speedup: 1.800 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(207,2) inlined into FastSEPNMF.c(84,7)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(94,3)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(94,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 54 
      remark #15477: vector cost: 28.250 
      remark #15478: estimated potential speedup: 1.860 
      remark #15486: divides: 1 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(94,3)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(103,3)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at FastSEPNMF.c(103,3)
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 5 
         remark #15477: vector cost: 1.500 
         remark #15478: estimated potential speedup: 2.850 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=6
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(103,3)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=24
      LOOP END
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(108,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at FastSEPNMF.c(111,4)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(111,4)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 2.000 
         remark #15478: estimated potential speedup: 3.580 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(111,4)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(111,4)
      <Remainder loop for vectorization>
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(116,4)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(116,4)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 10 
         remark #15477: vector cost: 2.000 
         remark #15478: estimated potential speedup: 4.620 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(116,4)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(116,4)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(116,4)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(126,3)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(126,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 2.000 
      remark #15478: estimated potential speedup: 3.600 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(126,3)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(130,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(130,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 35 
      remark #15477: vector cost: 9.500 
      remark #15478: estimated potential speedup: 3.530 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(130,3)
   <Alternate Alignment Vectorized Loop>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(130,3)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(130,3)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(136,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at FastSEPNMF.c(139,4)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(139,4)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 2.000 
         remark #15478: estimated potential speedup: 3.580 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(139,4)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(139,4)
      <Remainder loop for vectorization>
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(144,4)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(144,4)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 10 
         remark #15477: vector cost: 2.000 
         remark #15478: estimated potential speedup: 4.620 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(144,4)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(144,4)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(144,4)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(157,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at FastSEPNMF.c(159,4)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(159,4)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 2.000 
         remark #15478: estimated potential speedup: 3.580 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(159,4)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at FastSEPNMF.c(159,4)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at FastSEPNMF.c(180,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: maxVal(float *, long)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at FastSEPNMF.c(207,2)
<Peeled loop for vectorization>
   remark #25015: Estimate of max trip count of loop=3
LOOP END

LOOP BEGIN at FastSEPNMF.c(207,2)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 4.250 
   remark #15478: estimated potential speedup: 1.800 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FastSEPNMF.c(207,2)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: normalizeImg(float *, long, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at FastSEPNMF.c(221,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at FastSEPNMF.c(224,3)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(224,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 5 
      remark #15477: vector cost: 1.250 
      remark #15478: estimated potential speedup: 3.480 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(224,3)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(228,3)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(228,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 4.320 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FastSEPNMF.c(228,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================
